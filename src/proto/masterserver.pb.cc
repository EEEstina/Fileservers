// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: masterserver.proto

#include "masterserver.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_file_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_file_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FileInfoProto;
}  // namespace protobuf_file_2eproto
namespace goya {
namespace fs {
class CreateFileRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateFileRequest>
      _instance;
} _CreateFileRequest_default_instance_;
class CreateFileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateFileResponse>
      _instance;
} _CreateFileResponse_default_instance_;
class ListDirectoryRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListDirectoryRequest>
      _instance;
} _ListDirectoryRequest_default_instance_;
class ListDirectoryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListDirectoryResponse>
      _instance;
} _ListDirectoryResponse_default_instance_;
}  // namespace fs
}  // namespace goya
namespace protobuf_masterserver_2eproto {
static void InitDefaultsCreateFileRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goya::fs::_CreateFileRequest_default_instance_;
    new (ptr) ::goya::fs::CreateFileRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goya::fs::CreateFileRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateFileRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateFileRequest}, {}};

static void InitDefaultsCreateFileResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goya::fs::_CreateFileResponse_default_instance_;
    new (ptr) ::goya::fs::CreateFileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goya::fs::CreateFileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateFileResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateFileResponse}, {}};

static void InitDefaultsListDirectoryRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goya::fs::_ListDirectoryRequest_default_instance_;
    new (ptr) ::goya::fs::ListDirectoryRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goya::fs::ListDirectoryRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListDirectoryRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListDirectoryRequest}, {}};

static void InitDefaultsListDirectoryResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::goya::fs::_ListDirectoryResponse_default_instance_;
    new (ptr) ::goya::fs::ListDirectoryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::goya::fs::ListDirectoryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListDirectoryResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListDirectoryResponse}, {
      &protobuf_file_2eproto::scc_info_FileInfoProto.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CreateFileRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateFileResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListDirectoryRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListDirectoryResponse.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goya::fs::CreateFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goya::fs::CreateFileRequest, sequence_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goya::fs::CreateFileRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goya::fs::CreateFileRequest, file_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goya::fs::CreateFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goya::fs::CreateFileResponse, sequence_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goya::fs::CreateFileResponse, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goya::fs::ListDirectoryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goya::fs::ListDirectoryRequest, sequence_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goya::fs::ListDirectoryRequest, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goya::fs::ListDirectoryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goya::fs::ListDirectoryResponse, sequence_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goya::fs::ListDirectoryResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::goya::fs::ListDirectoryResponse, file_info_proto_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::goya::fs::CreateFileRequest)},
  { 8, -1, sizeof(::goya::fs::CreateFileResponse)},
  { 15, -1, sizeof(::goya::fs::ListDirectoryRequest)},
  { 22, -1, sizeof(::goya::fs::ListDirectoryResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::goya::fs::_CreateFileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goya::fs::_CreateFileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goya::fs::_ListDirectoryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::goya::fs::_ListDirectoryResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "masterserver.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022masterserver.proto\022\007goya.fs\032\nfile.prot"
      "o\"I\n\021CreateFileRequest\022\023\n\013sequence_id\030\001 "
      "\001(\004\022\014\n\004type\030\002 \001(\005\022\021\n\tfile_name\030\003 \001(\t\"9\n\022"
      "CreateFileResponse\022\023\n\013sequence_id\030\001 \001(\004\022"
      "\016\n\006status\030\002 \001(\005\"9\n\024ListDirectoryRequest\022"
      "\023\n\013sequence_id\030\001 \001(\004\022\014\n\004path\030\002 \001(\t\"m\n\025Li"
      "stDirectoryResponse\022\023\n\013sequence_id\030\001 \001(\004"
      "\022\016\n\006status\030\002 \001(\005\022/\n\017file_info_proto\030\003 \003("
      "\0132\026.goya.fs.FileInfoProto2\245\001\n\014MasterServ"
      "er\022E\n\nCreateFile\022\032.goya.fs.CreateFileReq"
      "uest\032\033.goya.fs.CreateFileResponse\022N\n\rLis"
      "tDirectory\022\035.goya.fs.ListDirectoryReques"
      "t\032\036.goya.fs.ListDirectoryResponseB\003\200\001\001b\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 526);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "masterserver.proto", &protobuf_RegisterTypes);
  ::protobuf_file_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_masterserver_2eproto
namespace goya {
namespace fs {

// ===================================================================

void CreateFileRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateFileRequest::kSequenceIdFieldNumber;
const int CreateFileRequest::kTypeFieldNumber;
const int CreateFileRequest::kFileNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateFileRequest::CreateFileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_masterserver_2eproto::scc_info_CreateFileRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goya.fs.CreateFileRequest)
}
CreateFileRequest::CreateFileRequest(const CreateFileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  ::memcpy(&sequence_id_, &from.sequence_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&sequence_id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:goya.fs.CreateFileRequest)
}

void CreateFileRequest::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sequence_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&sequence_id_)) + sizeof(type_));
}

CreateFileRequest::~CreateFileRequest() {
  // @@protoc_insertion_point(destructor:goya.fs.CreateFileRequest)
  SharedDtor();
}

void CreateFileRequest::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateFileRequest::descriptor() {
  ::protobuf_masterserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_masterserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateFileRequest& CreateFileRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_masterserver_2eproto::scc_info_CreateFileRequest.base);
  return *internal_default_instance();
}


void CreateFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:goya.fs.CreateFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sequence_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&sequence_id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool CreateFileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goya.fs.CreateFileRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 sequence_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sequence_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "goya.fs.CreateFileRequest.file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goya.fs.CreateFileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goya.fs.CreateFileRequest)
  return false;
#undef DO_
}

void CreateFileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goya.fs.CreateFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sequence_id = 1;
  if (this->sequence_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sequence_id(), output);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // string file_name = 3;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goya.fs.CreateFileRequest.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goya.fs.CreateFileRequest)
}

::google::protobuf::uint8* CreateFileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goya.fs.CreateFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sequence_id = 1;
  if (this->sequence_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->sequence_id(), target);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // string file_name = 3;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goya.fs.CreateFileRequest.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goya.fs.CreateFileRequest)
  return target;
}

size_t CreateFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goya.fs.CreateFileRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string file_name = 3;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // uint64 sequence_id = 1;
  if (this->sequence_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sequence_id());
  }

  // int32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateFileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goya.fs.CreateFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateFileRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateFileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goya.fs.CreateFileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goya.fs.CreateFileRequest)
    MergeFrom(*source);
  }
}

void CreateFileRequest::MergeFrom(const CreateFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goya.fs.CreateFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.sequence_id() != 0) {
    set_sequence_id(from.sequence_id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void CreateFileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goya.fs.CreateFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateFileRequest::CopyFrom(const CreateFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goya.fs.CreateFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateFileRequest::IsInitialized() const {
  return true;
}

void CreateFileRequest::Swap(CreateFileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateFileRequest::InternalSwap(CreateFileRequest* other) {
  using std::swap;
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sequence_id_, other->sequence_id_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateFileRequest::GetMetadata() const {
  protobuf_masterserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_masterserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateFileResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateFileResponse::kSequenceIdFieldNumber;
const int CreateFileResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateFileResponse::CreateFileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_masterserver_2eproto::scc_info_CreateFileResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goya.fs.CreateFileResponse)
}
CreateFileResponse::CreateFileResponse(const CreateFileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sequence_id_, &from.sequence_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&sequence_id_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:goya.fs.CreateFileResponse)
}

void CreateFileResponse::SharedCtor() {
  ::memset(&sequence_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&sequence_id_)) + sizeof(status_));
}

CreateFileResponse::~CreateFileResponse() {
  // @@protoc_insertion_point(destructor:goya.fs.CreateFileResponse)
  SharedDtor();
}

void CreateFileResponse::SharedDtor() {
}

void CreateFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateFileResponse::descriptor() {
  ::protobuf_masterserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_masterserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateFileResponse& CreateFileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_masterserver_2eproto::scc_info_CreateFileResponse.base);
  return *internal_default_instance();
}


void CreateFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:goya.fs.CreateFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&sequence_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&sequence_id_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool CreateFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goya.fs.CreateFileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 sequence_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sequence_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goya.fs.CreateFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goya.fs.CreateFileResponse)
  return false;
#undef DO_
}

void CreateFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goya.fs.CreateFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sequence_id = 1;
  if (this->sequence_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sequence_id(), output);
  }

  // int32 status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goya.fs.CreateFileResponse)
}

::google::protobuf::uint8* CreateFileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goya.fs.CreateFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sequence_id = 1;
  if (this->sequence_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->sequence_id(), target);
  }

  // int32 status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goya.fs.CreateFileResponse)
  return target;
}

size_t CreateFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goya.fs.CreateFileResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 sequence_id = 1;
  if (this->sequence_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sequence_id());
  }

  // int32 status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goya.fs.CreateFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateFileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateFileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goya.fs.CreateFileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goya.fs.CreateFileResponse)
    MergeFrom(*source);
  }
}

void CreateFileResponse::MergeFrom(const CreateFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goya.fs.CreateFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sequence_id() != 0) {
    set_sequence_id(from.sequence_id());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void CreateFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goya.fs.CreateFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateFileResponse::CopyFrom(const CreateFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goya.fs.CreateFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateFileResponse::IsInitialized() const {
  return true;
}

void CreateFileResponse::Swap(CreateFileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateFileResponse::InternalSwap(CreateFileResponse* other) {
  using std::swap;
  swap(sequence_id_, other->sequence_id_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateFileResponse::GetMetadata() const {
  protobuf_masterserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_masterserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListDirectoryRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDirectoryRequest::kSequenceIdFieldNumber;
const int ListDirectoryRequest::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDirectoryRequest::ListDirectoryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_masterserver_2eproto::scc_info_ListDirectoryRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goya.fs.ListDirectoryRequest)
}
ListDirectoryRequest::ListDirectoryRequest(const ListDirectoryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  sequence_id_ = from.sequence_id_;
  // @@protoc_insertion_point(copy_constructor:goya.fs.ListDirectoryRequest)
}

void ListDirectoryRequest::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequence_id_ = GOOGLE_ULONGLONG(0);
}

ListDirectoryRequest::~ListDirectoryRequest() {
  // @@protoc_insertion_point(destructor:goya.fs.ListDirectoryRequest)
  SharedDtor();
}

void ListDirectoryRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListDirectoryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListDirectoryRequest::descriptor() {
  ::protobuf_masterserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_masterserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDirectoryRequest& ListDirectoryRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_masterserver_2eproto::scc_info_ListDirectoryRequest.base);
  return *internal_default_instance();
}


void ListDirectoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:goya.fs.ListDirectoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequence_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ListDirectoryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goya.fs.ListDirectoryRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 sequence_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sequence_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "goya.fs.ListDirectoryRequest.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goya.fs.ListDirectoryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goya.fs.ListDirectoryRequest)
  return false;
#undef DO_
}

void ListDirectoryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goya.fs.ListDirectoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sequence_id = 1;
  if (this->sequence_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sequence_id(), output);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goya.fs.ListDirectoryRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goya.fs.ListDirectoryRequest)
}

::google::protobuf::uint8* ListDirectoryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goya.fs.ListDirectoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sequence_id = 1;
  if (this->sequence_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->sequence_id(), target);
  }

  // string path = 2;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "goya.fs.ListDirectoryRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goya.fs.ListDirectoryRequest)
  return target;
}

size_t ListDirectoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goya.fs.ListDirectoryRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 2;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // uint64 sequence_id = 1;
  if (this->sequence_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sequence_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDirectoryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goya.fs.ListDirectoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDirectoryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDirectoryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goya.fs.ListDirectoryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goya.fs.ListDirectoryRequest)
    MergeFrom(*source);
  }
}

void ListDirectoryRequest::MergeFrom(const ListDirectoryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goya.fs.ListDirectoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.sequence_id() != 0) {
    set_sequence_id(from.sequence_id());
  }
}

void ListDirectoryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goya.fs.ListDirectoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDirectoryRequest::CopyFrom(const ListDirectoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goya.fs.ListDirectoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDirectoryRequest::IsInitialized() const {
  return true;
}

void ListDirectoryRequest::Swap(ListDirectoryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDirectoryRequest::InternalSwap(ListDirectoryRequest* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sequence_id_, other->sequence_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListDirectoryRequest::GetMetadata() const {
  protobuf_masterserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_masterserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListDirectoryResponse::InitAsDefaultInstance() {
}
void ListDirectoryResponse::clear_file_info_proto() {
  file_info_proto_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDirectoryResponse::kSequenceIdFieldNumber;
const int ListDirectoryResponse::kStatusFieldNumber;
const int ListDirectoryResponse::kFileInfoProtoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDirectoryResponse::ListDirectoryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_masterserver_2eproto::scc_info_ListDirectoryResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:goya.fs.ListDirectoryResponse)
}
ListDirectoryResponse::ListDirectoryResponse(const ListDirectoryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      file_info_proto_(from.file_info_proto_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sequence_id_, &from.sequence_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&sequence_id_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:goya.fs.ListDirectoryResponse)
}

void ListDirectoryResponse::SharedCtor() {
  ::memset(&sequence_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&sequence_id_)) + sizeof(status_));
}

ListDirectoryResponse::~ListDirectoryResponse() {
  // @@protoc_insertion_point(destructor:goya.fs.ListDirectoryResponse)
  SharedDtor();
}

void ListDirectoryResponse::SharedDtor() {
}

void ListDirectoryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListDirectoryResponse::descriptor() {
  ::protobuf_masterserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_masterserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDirectoryResponse& ListDirectoryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_masterserver_2eproto::scc_info_ListDirectoryResponse.base);
  return *internal_default_instance();
}


void ListDirectoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:goya.fs.ListDirectoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_info_proto_.Clear();
  ::memset(&sequence_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&sequence_id_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool ListDirectoryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:goya.fs.ListDirectoryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 sequence_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sequence_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .goya.fs.FileInfoProto file_info_proto = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_file_info_proto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:goya.fs.ListDirectoryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:goya.fs.ListDirectoryResponse)
  return false;
#undef DO_
}

void ListDirectoryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:goya.fs.ListDirectoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sequence_id = 1;
  if (this->sequence_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sequence_id(), output);
  }

  // int32 status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }

  // repeated .goya.fs.FileInfoProto file_info_proto = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->file_info_proto_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->file_info_proto(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:goya.fs.ListDirectoryResponse)
}

::google::protobuf::uint8* ListDirectoryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:goya.fs.ListDirectoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sequence_id = 1;
  if (this->sequence_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->sequence_id(), target);
  }

  // int32 status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }

  // repeated .goya.fs.FileInfoProto file_info_proto = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->file_info_proto_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->file_info_proto(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:goya.fs.ListDirectoryResponse)
  return target;
}

size_t ListDirectoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:goya.fs.ListDirectoryResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .goya.fs.FileInfoProto file_info_proto = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->file_info_proto_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->file_info_proto(static_cast<int>(i)));
    }
  }

  // uint64 sequence_id = 1;
  if (this->sequence_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sequence_id());
  }

  // int32 status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDirectoryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:goya.fs.ListDirectoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDirectoryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDirectoryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:goya.fs.ListDirectoryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:goya.fs.ListDirectoryResponse)
    MergeFrom(*source);
  }
}

void ListDirectoryResponse::MergeFrom(const ListDirectoryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:goya.fs.ListDirectoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  file_info_proto_.MergeFrom(from.file_info_proto_);
  if (from.sequence_id() != 0) {
    set_sequence_id(from.sequence_id());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void ListDirectoryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:goya.fs.ListDirectoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDirectoryResponse::CopyFrom(const ListDirectoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:goya.fs.ListDirectoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDirectoryResponse::IsInitialized() const {
  return true;
}

void ListDirectoryResponse::Swap(ListDirectoryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDirectoryResponse::InternalSwap(ListDirectoryResponse* other) {
  using std::swap;
  CastToBase(&file_info_proto_)->InternalSwap(CastToBase(&other->file_info_proto_));
  swap(sequence_id_, other->sequence_id_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListDirectoryResponse::GetMetadata() const {
  protobuf_masterserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_masterserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

MasterServer::~MasterServer() {}

const ::google::protobuf::ServiceDescriptor* MasterServer::descriptor() {
  protobuf_masterserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_masterserver_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* MasterServer::GetDescriptor() {
  return descriptor();
}

void MasterServer::CreateFile(::google::protobuf::RpcController* controller,
                         const ::goya::fs::CreateFileRequest*,
                         ::goya::fs::CreateFileResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CreateFile() not implemented.");
  done->Run();
}

void MasterServer::ListDirectory(::google::protobuf::RpcController* controller,
                         const ::goya::fs::ListDirectoryRequest*,
                         ::goya::fs::ListDirectoryResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ListDirectory() not implemented.");
  done->Run();
}

void MasterServer::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_masterserver_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      CreateFile(controller,
             ::google::protobuf::down_cast<const ::goya::fs::CreateFileRequest*>(request),
             ::google::protobuf::down_cast< ::goya::fs::CreateFileResponse*>(response),
             done);
      break;
    case 1:
      ListDirectory(controller,
             ::google::protobuf::down_cast<const ::goya::fs::ListDirectoryRequest*>(request),
             ::google::protobuf::down_cast< ::goya::fs::ListDirectoryResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& MasterServer::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::goya::fs::CreateFileRequest::default_instance();
    case 1:
      return ::goya::fs::ListDirectoryRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& MasterServer::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::goya::fs::CreateFileResponse::default_instance();
    case 1:
      return ::goya::fs::ListDirectoryResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

MasterServer_Stub::MasterServer_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
MasterServer_Stub::MasterServer_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
MasterServer_Stub::~MasterServer_Stub() {
  if (owns_channel_) delete channel_;
}

void MasterServer_Stub::CreateFile(::google::protobuf::RpcController* controller,
                              const ::goya::fs::CreateFileRequest* request,
                              ::goya::fs::CreateFileResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void MasterServer_Stub::ListDirectory(::google::protobuf::RpcController* controller,
                              const ::goya::fs::ListDirectoryRequest* request,
                              ::goya::fs::ListDirectoryResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace fs
}  // namespace goya
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goya::fs::CreateFileRequest* Arena::CreateMaybeMessage< ::goya::fs::CreateFileRequest >(Arena* arena) {
  return Arena::CreateInternal< ::goya::fs::CreateFileRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goya::fs::CreateFileResponse* Arena::CreateMaybeMessage< ::goya::fs::CreateFileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::goya::fs::CreateFileResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goya::fs::ListDirectoryRequest* Arena::CreateMaybeMessage< ::goya::fs::ListDirectoryRequest >(Arena* arena) {
  return Arena::CreateInternal< ::goya::fs::ListDirectoryRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::goya::fs::ListDirectoryResponse* Arena::CreateMaybeMessage< ::goya::fs::ListDirectoryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::goya::fs::ListDirectoryResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
